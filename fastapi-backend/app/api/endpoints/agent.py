"""
API endpoints for Canvas data agent.
"""
from typing import Dict, Any
from fastapi import APIRouter, Depends, HTTPException, status
from pydantic import BaseModel
from app.core.security import get_current_user
from app.services.agent_service import canvas_agent_service
from app.services.firebase_service import firebase_service

router = APIRouter()

class AgentQuery(BaseModel):
    """Agent query model"""
    query: str
    
class AgentResponse(BaseModel):
    """Agent response model"""
    response: str
    success: bool
    error: str = None

@router.post("/chat", response_model=AgentResponse)
async def chat_with_agent(
    query: AgentQuery,
    current_user: Dict[str, Any] = Depends(get_current_user)
):
    """
    Chat with the Canvas data agent.
    
    This endpoint accepts a natural language query and returns a response
    generated by the AI agent based on the user's Canvas data.
    """
    try:
        # Get user ID
        uid = current_user["uid"]
        
        # Get Canvas credentials
        try:
            credentials = await firebase_service.get_canvas_credentials(uid)
        except ValueError as e:
            raise HTTPException(
                status_code=status.HTTP_404_NOT_FOUND,
                detail="Canvas credentials not found. Please set up your Canvas credentials."
            )
        
        # Process query
        result = await canvas_agent_service.process_query(query.query, credentials)
        
        return result
    except ValueError as e:
        raise HTTPException(
            status_code=status.HTTP_400_BAD_REQUEST,
            detail=str(e)
        )
    except Exception as e:
        raise HTTPException(
            status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
            detail=f"Failed to process query: {str(e)}"
        )
